on: 
  push:
    branches:
      - main

jobs:
  print_pr_number:
    runs-on: ubuntu-latest
    name: Print PR number
    steps:
      - uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Get Pull Request Number
        id: pr
        run: echo "::set-output name=pull_request_number::$(gh pr view --json number -q .number || echo "")"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "PR ${{ steps.pr.outputs.pull_request_number }}"

      - uses: actions/github-script@v6
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string
      - name: Issue number
        run: echo 'PR NUM ${{steps.get_issue_number.outputs.result}}'

      - uses: actions/github-script@v6
        id: get_pr_data
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];
      - name: Pull Request data
        run: |
          echo 'NUMBER ${{ fromJson(steps.get_pr_data.outputs.result).number }}'
          echo 'TITLE ${{ fromJson(steps.get_pr_data.outputs.result).title }}'
  
  build_app:
    runs-on: ubuntu-latest
    environment: development
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: NPM install
        run: npm ci
      - name: Build App
        env:
          ZE_SECRET_TOKEN: ${{ secrets.ZE_SECRET_TOKEN }}
          ZE_API: ${{ vars.ZE_API }}
          ZE_API_GATE: ${{ vars.ZE_API_GATE }}
        run: |
          cd zephyr-examples/create-mf-app-rspack
          npm ci
          npm run build
      - name: Zephyr deploy summary
        uses: ./ # Uses an action in the root directory
        id: zephyr
        with:
          application_uid: create-mf-app-rspack-host.zephyr-ci.opavlovskyi

